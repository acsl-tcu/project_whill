<?xml version="1.0"?>
<!-- <xacro:xml xmlns:xacro="http://www.ros.org/wiki/xacro"> -->
<robot name="wheelchair" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:arg name="for_gazebo" default="false"/>
  <xacro:arg name="gpu" default="true"/>
  <xacro:arg name="organize_cloud" default="false"/>
  <xacro:arg name="controller_yaml" default=""/> 
  <xacro:arg name="robotNamespace" default="wheelchair"/>
  <!-- ROS 2-ready URDF/Xacro for the electric wheelchair model -->
  <!-- <robot name="wheelchair" xmlns:xacro="http://ros.org/wiki/xacro"> -->
  <xacro:macro name="wheelchair_robot" params="">
    <!-- <robot name="wheelchair" xmlns="http://www.ros.org"> -->
    

      <xacro:if value="$(arg for_gazebo)">
        <xacro:property name="mesh_prefix" value="model://"/>
      </xacro:if>
      <xacro:unless value="$(arg for_gazebo)">
        <xacro:property name="mesh_prefix" value="package://electric_wheelchair/models/"/>
      </xacro:unless>
      <xacro:property name="gpu" value="$(arg gpu)" />
      <xacro:property name="organize_cloud" value="$(arg organize_cloud)" />
      <!-- ===== Global material definitions ===== -->
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>

      <!-- ======================== Frame hierarchy ======================== -->
      <link name="base_footprint"/>
        <joint name="base_link_joint" type="fixed">
          <parent link="base_footprint"/>
          <child  link="base_link"/>
          <origin xyz="0 0 0.10"/>
      </joint>

      <!-- ============================ Base =============================== -->
      <link name="base_link">
        <visual>
          <origin rpy="0 0 3.1415" xyz="0.22 0 0.01"/>
          <material name="Grey">
            <color rgba="0.6 0.6 0.6 1"/>   <!-- ← α を 1.0 に -->
          </material>
          <geometry>
            <!-- Use package:// URI so no GAZEBO_MODEL_PATH is needed -->
            <mesh filename="${mesh_prefix}electric_wheelchair/meshes/base.dae" scale="1 1 1"/>
            <!-- <mesh filename="package://electric_wheelchair/models/electric_wheelchair/meshes/base.dae" scale="1 1 1"/> -->
          </geometry>
        </visual>
        <collision>
          <origin rpy="0 0 3.1415" xyz="0.22 0 0.01"/>
          <geometry>
            <mesh filename="${mesh_prefix}electric_wheelchair/meshes/base.dae" scale="1 1 1"/>
            <!-- <mesh filename="package://electric_wheelchair/models/electric_wheelchair/meshes/base.dae" scale="1 1 1"/> -->
          </geometry>
        </collision>
        <inertial>
          <origin xyz="0 0 0"/>
          <mass value="48"/>
          <inertia ixx="0.051" ixy="0" ixz="0" iyy="0.107" iyz="0" izz="0.106"/>
        </inertial>
      </link>

      <!-- =========================== Wheels ============================== -->
      <!-- Left wheel -->
      <link name="left_wheel_link">
        <visual>
          <material name="Grey">
            <color rgba="0.6 0.6 0.6 1"/>   <!-- ← α を 1.0 に -->
          </material>
          <geometry>
            <mesh filename="${mesh_prefix}electric_wheelchair/meshes/rearwheel.dae" scale="1 1 1"/>
            <!-- <mesh filename="package://electric_wheelchair/models/electric_wheelchair/meshes/rearwheel.dae" scale="1 1 1"/> -->
          </geometry>
          <origin xyz="-0.22 0 -0.25" rpy="1.570796 0 0"/>
          <material name="black"/>
        </visual>
        <collision>
          <geometry>
            <cylinder radius="0.1325" length="0.05"/>
          </geometry>
        </collision>
        <inertial>
          <origin xyz="0 0 0"/>
          <mass value="1"/>
          <inertia ixx="0.004433" ixy="0" ixz="0" iyy="0.004433" iyz="0" izz="0.00845"/>
        </inertial>
      </link>
      <joint name="left_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child  link="left_wheel_link"/>
        <origin rpy="-1.570796 0 0" xyz="0 0.246 0"/>
        <axis xyz="0 0 1"/>
      </joint>

      <!-- Right wheel -->
      <link name="right_wheel_link">
        <visual>
          <material name="Grey">
            <color rgba="0.6 0.6 0.6 1"/>   <!-- ← α を 1.0 に -->
          </material>
          <geometry>
            <mesh filename="${mesh_prefix}electric_wheelchair/meshes/rearwheel.dae" scale="1 1 1"/>
            <!-- <mesh filename="package://electric_wheelchair/models/electric_wheelchair/meshes/rearwheel.dae" scale="1 1 1"/> -->
          </geometry>
          <origin xyz="-0.23 0 -0.25" rpy="1.570796 0 0"/>
          <material name="black"/>
        </visual>
        <collision>
          <geometry>
            <cylinder radius="0.1325" length="0.055"/>
          </geometry>
        </collision>
        <inertial>
          <origin xyz="0 0 0"/>
          <mass value="1"/>
          <inertia ixx="0.004433" ixy="0" ixz="0" iyy="0.004433" iyz="0" izz="0.00845"/>
        </inertial>
      </link>
      <joint name="right_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child  link="right_wheel_link"/>
        <origin rpy="1.570796 0 0" xyz="0 -0.246 0"/>
        <axis xyz="0 0 -1"/>
      </joint>

      <!-- =========================== Casters ============================= -->
      <!-- Only the mesh paths were updated; rest unchanged for brevity -->
      <link name="left_caster_link">
        <visual>
          <material name="Grey">
            <color rgba="0.6 0.6 0.6 1"/>   <!-- ← α を 1.0 に -->
          </material>
          <geometry>
            <mesh filename="${mesh_prefix}electric_wheelchair/meshes/frontwheel.dae" scale="1 1 1"/>
            <!-- <mesh filename="package://electric_wheelchair/models/electric_wheelchair/meshes/frontwheel.dae" scale="1 1 1"/> -->
          </geometry>
          <origin xyz="0.36 0 0.24" rpy="1.570796 0 0"/>
          <material name="green"><color rgba="0 1 0 1"/></material>
        </visual>
        <collision>
          <geometry>
            <cylinder radius="0.127" length="0.055"/>
          </geometry>
        </collision>
        <inertial>
          <origin xyz="0 0 0"/>
          <mass value="1"/>
          <inertia ixx="0.004433" ixy="0" ixz="0" iyy="0.004433" iyz="0" izz="0.0007812"/>
        </inertial>
      </link>
      <joint name="left_caster_joint" type="continuous">
      <!-- <joint name="left_caster_joint" type="fixed"> -->
        <parent link="base_link"/>
        <child  link="left_caster_link"/>
        <origin rpy="1.570796 0 0" xyz="0.592 0.246 0"/>
        <axis xyz="0 0 1"/>
        <!-- <limit effort="1.0" velocity="1.6"/>
        <dynamics damping="0.1"/> -->
        <!-- <hardwareInterface>position</hardwareInterface> -->
      </joint>

      <link name="right_caster_link">
        <visual>
          <material name="Grey">
            <color rgba="0.6 0.6 0.6 1"/>   <!-- ← α を 1.0 に -->
          </material>
          <geometry>
            <mesh filename="${mesh_prefix}electric_wheelchair/meshes/frontwheel.dae" scale="1 1 1"/>
            <!-- <mesh filename="package://electric_wheelchair/models/electric_wheelchair/meshes/frontwheel.dae" scale="1 1 1"/> -->
          </geometry>
          <origin xyz="0.36 0 0.23" rpy="1.570796 0 0"/>
          <material name="green"><color rgba="0 1 0 1"/></material>
        </visual>
        <collision>
          <geometry>
            <cylinder radius="0.127" length="0.055"/>
          </geometry>
        </collision>
        <inertial>
          <origin xyz="0 0 0"/>
          <mass value="1"/>
          <inertia ixx="0.004433" ixy="0" ixz="0" iyy="0.004433" iyz="0" izz="0.0007812"/>
        </inertial>
      </link>
      <joint name="right_caster_joint" type="continuous">
      <!-- <joint name="right_caster_joint" type="fixed"> -->
        <parent link="base_link"/>
        <child  link="right_caster_link"/>
        <origin rpy="1.570796 0 0" xyz="0.592 -0.246 0"/>
        <axis xyz="0 0 1"/>
        <!-- <limit effort="1.0" velocity="1.6"/>
        <dynamics damping="0.1"/> -->
        <!-- <hardwareInterface>position</hardwareInterface> -->
      </joint>

      <!-- ========================= Transmissions ========================= -->
      <transmission name="left_wheel_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="left_wheel_joint">
          <hardwareInterface>velocity</hardwareInterface>
        </joint>
        <actuator name="left_wheel_motor">
          <hardwareInterface>velocity</hardwareInterface>
          <mechanicalReduction>0.25</mechanicalReduction>
        </actuator>
      </transmission>

      <transmission name="right_wheel_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="right_wheel_joint">
          <hardwareInterface>velocity</hardwareInterface>
        </joint>
        <actuator name="right_wheel_motor">
          <hardwareInterface>velocity</hardwareInterface>
          <mechanicalReduction>0.25</mechanicalReduction>
        </actuator>
      </transmission>

      <transmission name="left_caster_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="left_caster_joint">
          <hardwareInterface>velocity</hardwareInterface>  <!-- これが必要 -->
        </joint>
        <actuator name="left_caster_motor">
          <hardwareInterface>velocity</hardwareInterface>
          <mechanicalReduction>0.25</mechanicalReduction>
        </actuator>
      </transmission>

      <transmission name="right_caster_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="right_caster_joint">
          <hardwareInterface>velocity</hardwareInterface>  <!-- これが必要 -->
        </joint>
        <actuator name="right_caster_motor">
          <hardwareInterface>velocity</hardwareInterface>
          <mechanicalReduction>0.25</mechanicalReduction>
        </actuator>
      </transmission>

    <!-- ========================== ros2_control ========================== -->
    <ros2_control name="WheelchairSystem" type="system" enforce_initial_position="true">
      <hardware>
        <plugin>gazebo_ros2_control/GazeboSystem</plugin>
      </hardware>
      <joint name="left_wheel_joint">
        <command_interface name="velocity"/>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
      </joint>
      <joint name="right_wheel_joint">
        <command_interface name="velocity"/>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
      </joint>
      <joint name="left_caster_joint">
        <command_interface name="velocity"/>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
      </joint>
      <joint name="right_caster_joint">
        <command_interface name="velocity"/>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
      </joint>
    </ros2_control>
    
      <!-- <ros2_control name="WheelchairSystem" type="system" enforce_initial_position="true">
      <hardware>
        <plugin>gazebo_ros2_control/GazeboSystem</plugin>
      </hardware>
      <joint>
        <name>left_wheel_joint</name>
        <command_interface name="velocity"/>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
      </joint>
      <joint>
        <name>right_wheel_joint</name>
        <command_interface name="velocity"/>
        <state_interface name="position"/>
        <state_interface name="velocity"/>
      </joint>
    </ros2_control> -->

      <!-- ========================== Gazebo plugin ========================== -->
      <gazebo>
        <!-- <plugin name="gazebo_ros_init" filename="libgazebo_ros_init.so"/>
        <plugin name="gazebo_ros_factory" filename="libgazebo_ros_factory.so"/>
        <plugin name="gazebo_ros_state" filename="libgazebo_ros_state.so">
          <ros>
            <namespace>$(arg robotNamespace)</namespace>
          </ros> 
        </plugin> -->
        <!-- <plugin name="gazebo_ros2_state" filename="libgazebo_ros2_state.so"/> -->
        <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
          <!-- <ros2_control> -->
            <!-- コントローラ用名前空間 -->
            <!-- <robotNamespace>$(arg robotNamespace)</robotNamespace> -->
            <ros>
              <namespace>$(arg robotNamespace)</namespace>
            </ros>
            <!-- URDF を載せている ROS パラメータ名 -->
            <!-- <robotParam>robot_description</robotParam> -->
            <!-- そのパラメータを持っているノード名 -->
            <!-- <robotParamNode>robot_state_publisher</robotParamNode> -->
            <!-- controllerの構成yamlファイルの階層 -->
            <!-- <paramFile>$(arg controller_yaml)</paramFile> -->
            <parameters>$(arg controller_yaml)</parameters>
            <!-- <paramFile>/root/ros2_ws/src/wheelchair/electric_wheelchair/config/controller.yaml</paramFile> -->
          <!-- </ros2_control> -->
          <!-- <paramFile>package://electric_wheelchair/config/controller.yaml</paramFile> -->
        </plugin>
      </gazebo>

      <!-- Example friction / collision settings (unchanged except for indentation) -->
      <gazebo reference="base_link">
        <selfCollide>true</selfCollide>
        <mu1 value="0.05"/>
        <mu2 value="0.05"/>
      </gazebo>
      <gazebo reference="left_wheel_link"><selfCollide>true</selfCollide><mu1 value="0.8"/><mu2 value="0.8"/></gazebo>
      <gazebo reference="right_wheel_link"><selfCollide>true</selfCollide><mu1 value="0.8"/><mu2 value="0.8"/></gazebo>
      <gazebo reference="left_caster_link"><selfCollide>true</selfCollide><mu1 value="0.8"/><mu2 value="0.8"/></gazebo>
      <gazebo reference="right_caster_link"><selfCollide>true</selfCollide><mu1 value="0.8"/><mu2 value="0.8"/></gazebo>

      <!-- ========================== Sensors ============================= -->
      <xacro:include filename="$(find velodyne_description)/urdf/VLP-16.urdf.xacro"/>
      <xacro:VLP-16 parent="base_link" name="velodyne" topic="/velodyne_points" organize_cloud="${organize_cloud}" hz="10" samples="440" gpu="${gpu}">
        <origin xyz="0 0 1" rpy="0 0 0"/>
      </xacro:VLP-16>

    <!-- </robot> -->
  </xacro:macro>
  <xacro:wheelchair_robot />
  <!-- </xacro:xml> -->
</robot>

